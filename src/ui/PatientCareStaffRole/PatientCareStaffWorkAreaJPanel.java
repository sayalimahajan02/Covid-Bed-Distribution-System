/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PatientCareStaffRole;

import Business.Authorization.PatientAuthorizationAdmin;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Hospital.Patient;
import Business.Hospital.PatientCareStaff;
import Business.Organization.Organization;
import Business.Status;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class PatientCareStaffWorkAreaJPanel extends javax.swing.JPanel {
private static EcoSystem system;
    private static DB4OUtil dB4OUtil;
    private static JPanel userProcessorcontainer;
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    private Status status;
    private PatientCareStaff patientCareStaffLogin;
    /**
     * Creates new form PatientCareStaffWorkAreaJPanel
     */
    public PatientCareStaffWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, PatientCareStaff patientCareStaff) {
        initComponents();
         this.system = business;
        this.dB4OUtil = dB4OUtil;
        this.userProcessorcontainer = userProcessContainer;
    this.userProcessContainer=userProcessContainer;
    this.account=account;
    this.organization=organization;
    this.enterprise=enterprise;
    this.business=business;
    this.patientCareStaffLogin=patientCareStaffLogin;
    this.setSize(1680, 1050);
    populatePatientDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientjTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnaccept = new javax.swing.JLabel();
        btncomplete = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient Phone Number", "Ambulance Number", "Driver Name", "Driver Phone Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientjTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 166, 797, 97));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Patient and Ambulance Assigned");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 196, 27));

        btnback.setText("<<Back");
        add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 21, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel3.setText("HELLO PATIENT CARE STAFF!");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        btnaccept.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnaccept.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnaccept.setText("Accept and Proceed");
        btnaccept.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnaccept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnacceptMousePressed(evt);
            }
        });
        add(btnaccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 143, 28));

        btncomplete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btncomplete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btncomplete.setText("Complete");
        btncomplete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btncomplete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btncompleteMousePressed(evt);
            }
        });
        add(btncomplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 130, 28));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nurse (1).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 360, 260));
    }// </editor-fold>//GEN-END:initComponents

    private void btnacceptMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnacceptMousePressed
        // TODO add your handling code here:
        
        int selectedRowIndex = patientjTable.getSelectedRow();
        if (patientjTable.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Please select one patient to confirm pickup!!");
            return;
        }
        Patient selectedPatient=system.getPatientDirectory().getPatientByID(Integer.parseInt((String)patientjTable.getValueAt(selectedRowIndex, 0)));
         if(selectedPatient.getPatientstatus().equals(status.PatientPickup.getValue())){
         selectedPatient.setPatientstatus(status.AssignToMe.getValue());
         }
         else{
             JOptionPane.showMessageDialog(null, "Please select patient with confirmed pickup!!");
            return;
         }       
    }//GEN-LAST:event_btnacceptMousePressed

    private void btncompleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btncompleteMousePressed
        // TODO add your handling code here:
        
         int selectedRowIndex = patientjTable.getSelectedRow();
        if (patientjTable.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Please select one patient to confirm pickup!!");
            return;
        }
        Patient selectedPatient=system.getPatientDirectory().getPatientByID(Integer.parseInt((String)patientjTable.getValueAt(selectedRowIndex, 0)));
         if(selectedPatient.getPatientstatus().equals(status.PatientDrop.getValue())){
         selectedPatient.setPatientstatus(status.Completed.getValue());
         }
         else{
             JOptionPane.showMessageDialog(null, "Please select patient with confirmed pickup!!");
            return;
         } 
    }//GEN-LAST:event_btncompleteMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnaccept;
    private javax.swing.JButton btnback;
    private javax.swing.JLabel btncomplete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientjTable;
    // End of variables declaration//GEN-END:variables

    private void populatePatientDetails() {
         DefaultTableModel model = (DefaultTableModel) patientjTable.getModel();
        model.setRowCount(0);

        for(Patient patient : system.getPatientDirectory().getPatientDirectory()){
            if((patient.getAmbulancedriver().getId()!=0 || patient.getPrivatedriver().getId()!=0) && patient.getAmbulancedriver().getId()==patientCareStaffLogin.getPatientcarestaffID() && (patient.getPatientstatus().equals(status.PatientPickup.getValue()) || patient.getPatientstatus().equals(status.Allocated.getValue()) )){
                Object[] row=new Object[5];
                row[0]=patient.getLastname()+", "+patient.getFirstname();
                row[1]=patient.getPhonenumber();
                if(patient.getAmbulancedriver().getId()!=0)
                {
                row[2]=patient.getAmbulancedriver().getAmbulanceNumber();
                row[3]=patient.getAmbulancedriver().getDriverLastName()+", "+patient.getAmbulancedriver().getDriverFirstName();
                row[4]=patient.getAmbulancedriver().getPhoneNumber();
                }
                if(patient.getPrivatedriver().getId()!=0)
                {
                row[2]=patient.getPrivatedriver().getPrivateVehicleNumber();
                row[3]=patient.getPrivatedriver().getDriverLastName()+", "+patient.getPrivatedriver().getDriverFirstName();
                row[4]=patient.getPrivatedriver().getPhoneNumber();
                }
                model.addRow(row);
            }
        }
    }
}
